<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="content-type" content="text/html;charset=utf-8">
    <script src="http://mbostock.github.com/d3/d3.js?2.3.2" type="text/javascript"> </script>
    <script src='http://mbostock.github.com/d3/d3.layout.js?2.3.2' type='text/javascript'> </script>
    <script src='http://mbostock.github.com/d3/d3.geom.js?2.3.2' type='text/javascript'> </script>
    <style type="text/css">
      .link { stroke: #ccc; }
      .nodetext { pointer-events: none; font: <%= params[:font] || 12 %>px sans-serif; }
    </style>
  </head>
  <body>
    <div id="chart"></div>
    <script type="text/javascript">
      var w = 1280,
      h = 960,
      fill = d3.scale.category20();

      var vis = d3.select("#chart")
        .append("svg:svg")
        .attr("width", w)
        .attr("height", h);
      console.log(vis);
      

      d3.json("/graph_data/<%= @token %>", function(json) {
        var force = d3.layout.force()
        .charge(<%= params[:charge] || -145 %>)
        .linkDistance(<%= params[:distance] || 55 %>)
        .nodes(json.nodes)
        .links(json.links)
        .size([w, h])
        .start();

        var link = vis.selectAll("line.link")
        .data(json.links)
        .enter().append("svg:line")
        .attr("class", "link")
        .style("stroke-width", function(d) { return Math.sqrt(d.value); })
        .attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

        var node = vis.selectAll("g.node")
        .data(json.nodes)
        .enter().append("svg:g")
        .attr("class", "node")
        .call(force.drag);

        node.append("svg:circle")
        .attr("class", "circle")
        .attr("r", 3)
        .style("fill", function(d) { return fill(d.group); })

        node.append("svg:text")
        .attr("class", "nodetext")
        .attr("dx", 0)
        .attr("dy", -5)
        .attr("text-anchor","middle")
        .text(function(d) { return d.name; });


        vis.style("opacity", 1e-6)
        .transition()
        .duration(1000)
        .style("opacity", 1);

        force.on("tick", function() {
          link.attr("x1", function(d) { return d.source.x; })
          .attr("y1", function(d) { return d.source.y; })
          .attr("x2", function(d) { return d.target.x; })
          .attr("y2", function(d) { return d.target.y; });

          node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
        });
      });
    </script>
  </body>
</html>
